<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DM" ignored="0" name="Test" tests="3" failures="1" timestamp="2020-04-22T20:13:29 EET" time="23.029" errors="0">
  <testcase name="@AfterMethod takeScreenshotOnFailure" time="0.013" classname="tasts.TestBase">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=81.0.4044.122)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DM&amp;apos;, ip: &amp;apos;10.0.3.15&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_151&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.122, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\pc\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:54072}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: eebd4440648297cd4533568ff795136c">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=81.0.4044.122)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DM', ip: '10.0.3.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.122, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\pc\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:54072}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: eebd4440648297cd4533568ff795136c
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utilities.Helper.captureScreenshot(Helper.java:21)
at tasts.TestBase.takeScreenshotOnFailure(TestBase.java:57)
at java.util.ArrayList.forEach(Unknown Source)
... Removed 40 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod takeScreenshotOnFailure -->
  <testcase name="@AfterMethod takeScreenshotOnFailure" time="-1.587579209389E9" classname="tasts.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod takeScreenshotOnFailure -->
  <testcase name="@AfterMethod takeScreenshotOnFailure" time="-1.58757920939E9" classname="tasts.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod takeScreenshotOnFailure -->
  <testcase name="userRegisterSuccessully" time="22.953" classname="tasts.UserRegisterationTest">
    <failure type="org.openqa.selenium.NoSuchElementException" message="Cannot locate an element using xpath=/html/body/div[6]/div[3]/div/div/form/div/div[2]/div[1]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DM&amp;apos;, ip: &amp;apos;10.0.3.15&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_151&amp;apos;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath=/html/body/div[6]/div[3]/div/div/form/div/div[2]/div[1]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DM', ip: '10.0.3.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.getText(Unknown Source)
at tasts.UserRegisterationTest.userRegisterSuccessully(UserRegisterationTest.java:36)
at java.util.ArrayList.forEach(Unknown Source)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- userRegisterSuccessully -->
  <testcase name="registeredUserLogOut" time="0.0" classname="tasts.UserRegisterationTest">
    <skipped/>
  </testcase> <!-- registeredUserLogOut -->
  <testcase name="registerdUserCanLogin" time="0.0" classname="tasts.UserRegisterationTest">
    <skipped/>
  </testcase> <!-- registerdUserCanLogin -->
</testsuite> <!-- Test -->
